from random import randbytes, randint, seed, choice
from hashlib import sha256

seed(1337)
SIZE = 500

test_cases = set()

with open("../op-tests/test-sha256.txt", "w+") as f:
    f.write("; This file was generated by tools/generate-sha256-tests.py\n\n")

    for i in range(0, SIZE):
        num_args = choice([0, 1, 2, 2, 2, 3, 3, 3, 4])
        args = []
        cost = 87
        ctx = sha256()
        test_args = []
        for i in range(num_args):
            cost += 134
            arg = choice([b"", b"\x01", b"\x02", b"foobar", randbytes(24), randbytes(48), randbytes(32)])
            cost += len(arg) * 2
            args.append(arg)
            ctx.update(arg)
            if arg == b"":
                test_args.append("0")
            else:
                test_args.append(f"0x{arg.hex()}")
        # malloc cost
        cost += 32 * 10
        test = " ".join(test_args)
        if test in test_cases:
            continue
        test_cases.add(test)
        f.write(f"sha256 {test} => 0x{ctx.hexdigest()} | {cost}\n")
