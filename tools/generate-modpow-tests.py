from random import randbytes, randint, seed, sample

seed(1337)
SIZE = 40

def bytes_in_atom(atom: bytes) -> int:
    while len(atom) > 1 and atom[0] == 0 and atom[1] < 128:
        atom = atom[1:]
    return len(atom)

with open("../op-tests/test-modpow.txt", "w+") as f:
    f.write("; This file was generated by tools/generate-modpow-tests.py\n\n")

    for i in range(0, SIZE):
        base = int.from_bytes(randbytes(32))
        exponent = int.from_bytes(randbytes(32))
        mod = int.from_bytes(randbytes(32))
        blen = bytes_in_atom(base.to_bytes(33))
        elen = bytes_in_atom(exponent.to_bytes(33))
        mlen = bytes_in_atom(mod.to_bytes(33))
        result = pow(base, exponent, mod)
        rlen = bytes_in_atom(result.to_bytes(33))
        cost = 17000 + blen * 38 + elen * elen * 3 + mlen * mlen * 21 + rlen * 10
        f.write(f"modpow {base} {exponent} {mod} => {result} | {cost}\n")

    for i in range(0, SIZE):
        base = int.from_bytes(randbytes(32))
        mod = int.from_bytes(randbytes(16))
        blen = bytes_in_atom(base.to_bytes(33))
        mlen = bytes_in_atom(mod.to_bytes(17))
        result = base % mod
        rlen = bytes_in_atom(result.to_bytes(17))
        cost = 988 + (blen + mlen) * 4 + rlen * 10
        f.write(f"% {base} {mod} => {result} | {cost}\n")
