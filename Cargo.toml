[workspace]
members = ["fuzz", "tools", "wasm", "wheel", "clvm-fuzzing"]

[package]
name = "clvmr"
version = "0.16.2"
authors = ["Richard Kiss <him@richardkiss.com>"]
edition = "2021"
license = "Apache-2.0"
description = "Implementation of `clvm` for Chia Network's cryptocurrency"
homepage = "https://github.com/Chia-Network/clvm_rs/"
repository = "https://github.com/Chia-Network/clvm_rs/"
readme = "README.md"

[lib]
name = "clvmr"
crate-type = ["rlib"]
bench = false

[features]
# when enabling the "counters" features, the CLVM interpreter is instrumented to
# collect counters about the programs it executes
counters = []

# when enabled, pre-eval and post-eval callbacks are enabled. This is useful for
# debugging and tracing of programs.
pre-eval = []

# when enabled, NodePtr will contain additional metadata to assert that they are
# used correctly
allocator-debug = []

# On UNIX-based platforms, you may get a speed boost on `sha256` operations by building
# with OpenSSL when enabled
openssl = ["chia-sha2/openssl"]

[profile.release]
lto = "thin"

[workspace.dependencies]
clvmr = { path = ".", version = "0.16.1" }
clvm-fuzzing = { path = "./clvm-fuzzing", version = "0.16.1" }
lazy_static = "1.5.0"
num-bigint = "0.4.6"
num-traits = "0.2.19"
num-integer = "0.1.46"
chia-bls = "0.28.1"
chia-sha2 = "0.28.1"
hex-literal = "0.4.1"
# for secp sigs
k256 = "0.13.4"
p256 = "0.13.2"
rstest = "0.21.0"
criterion = "0.5.1"
hex = "0.4.3"
pyo3 = "0.22.6"
wasm-bindgen = "0.2.100"
wasm-bindgen-test = "0.3.50"
js-sys = "0.3.77"
getrandom = "0.2.15"
libfuzzer-sys = "0.4.9"
rand = "0.8.5"
sha1 = "0.10.6"
linreg = "0.2.0"
serde = "1.0.219"
serde_json = "1.0.140"
clap = "4.5.47"
rand_chacha = "0.3.1"
bitvec = "1.0.1"
arbitrary = { version = "1.4.1", features = ["derive"] }
bumpalo = "3.17.0"
anyhow = "1.0.93"

[dependencies]
lazy_static = { workspace = true }
num-bigint = { workspace = true }
num-traits = { workspace = true }
num-integer = { workspace = true }
chia-bls = { workspace = true }
chia-sha2 = { workspace = true }
hex-literal = { workspace = true }
bitvec = { workspace = true }
# for secp sigs
k256 = { version = "0.13.4", features = ["ecdsa"] }
p256 = { version = "0.13.2", features = ["ecdsa"] }
# for keccak256
sha3 = "0.10.8"
rand = { workspace = true }
hex = { workspace = true }
sha1 = { workspace = true }
bumpalo = { workspace = true }
thiserror = "1.0.69"


[dev-dependencies]
rstest = { workspace = true }
criterion = { workspace = true }
hex = { workspace = true }

[[bench]]
name = "run-program"
harness = false

[[bench]]
name = "deserialize"
harness = false

[[bench]]
name = "sha256_hash"
harness = false

[[bench]]
name = "serialize"
harness = false
